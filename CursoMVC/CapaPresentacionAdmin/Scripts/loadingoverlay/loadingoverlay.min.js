/*************************************************** **************************************************
LoadingOverlay: un complemento jQuery de superposición de carga flexible
    Autor: Gaspare Sganga
    Versión: 2.1.7
    Licencia: MIT
    Documentación: https://gasparesganga.com/labs/jquery-loading-overlay/
************************************************** ***********************************************/
! function (e) { "function" == typeof define && define.amd ? define(["jquery"], e) : "object" == typeof module && module.exports ? e(require("jquery")) : e(jQuery) }(function (g, a) { "use strict"; var t = { background: "rgba(255, 255, 255, 0.8)", backgroundClass: "", image: "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 1000'><círculo r='80' cx='500' cy='90'/>><círculo r='80' cx='500' cy='910'/>><círculo r='80' cx='90' cy='500'/> <círculo r='80' cx='910' cy='500'/> <círculo r='80' cx='212' cy='212'/> <círculo r='80' cx='788' cy='212'/> <círculo r='80' cx='212' cy='788'/> <círculo r='80' cx='788' cy='788'/></svg>", imageAnimation: "2000ms rotate_right", imageAutoResize: !0, imageResizeFactor: 1, imageColor: "#202020", imageClass: "", imageOrder: 1, fontawesome: "", fontawesomeAnimation: "", fontawesomeAutoResize: !0, fontawesomeResizeFactor: 1, fontawesomeColor: "#202020", fontawesomeOrder: 2, custom: "", customAnimation: "", customAutoResize: !0, customResizeFactor: 1, customOrder: 3, text: "", textAnimation: "", textAutoResize: !0, textResizeFactor: .5, textColor: "#202020", textClass: "", textOrder: 4, progress: !1, progressAutoResize: !0, progressResizeFactor: .25, progressColor: "#a0a0a0", progressClass: "", progressOrder: 5, progressFixedPosition: "", progressSpeed: 200, progressMin: 0, progressMax: 100, size: 50, maxSize: 120, minSize: 20, direction: "column", fade: !0, resizeInterval: 50, zIndex: 2147483647 }, c = { superposición: { "tamaño de caja": "cuadro de borde", posición: "relativa", visualización: "flex", "flex-wrap": "nowrap", "align-items": "centro", "justify-content": "espacio alrededor" }, elemento: { "tamaño de caja": "cuadro de borde", desbordamiento: "visible", flex: "0 0 auto", display: "flex", justify- content":"centrar",align-items": "centrar" }, element_svg: { ancho: "100%", alto: "100%" }, progress_fixed: { posición: "absoluta", izquierda: "0", ancho: "100%" }, progress_wrapper: { posición: "absoluta", arriba: "0", izquierda: "0", ancho: "100%", alto: "100%" }, progress_bar: {p posición: "absoluta", izquierda: "0" }}, n = { cuenta: 0, contenedor: a, configuraciones: a, página completa: a, intervalo de cambio de tamaño: a, texto: a, progreso: a }, s = { animaciones: ["rotar_a_la_derecha", "rotar_a_la_izquierda", "aparecer gradualmente", "pulso"], posición de progreso: ["arriba", "abajo"] }, d = { animaciones: { nombre: "rotar_a_la_derecha", tiempo: "2000 ms" }, "aparecer gradualmente": [400, 200] };función o(e, s){ e = g(e), s.tamaño = w(s.tamaño), s.maxSize = parseInt(s.maxSize, 10) || 0, s.minSize = parseInt(s.minSize, 10) || 0, s.resizeInterval = parseInt(s.resizeInterval, 10) || 0; var t = p(e), a = u(e); if (!1 === a) { if ((a = g.extend({}, n)).container = e, a.wholePage = e.is("cuerpo"), t = g("<div>", { clase: "loadingoverlay" }).css(c.overlay).css("flex-direction", "fila" === s.direccion.toLowerCase() ? "fila" : columna"),s.backgroundClass?t.addClass(s.backgroundClass):t.css("fondo",s.fondo),a.wholePage&&t.css({posición:"fijo",arriba:0,izquierda:0,ancho:"100 % ",alto:"100 % "}),void 0!==s.zIndex&&t.css("índice z",s.zIndex),s.image){g.isArray(s.imageColor)?0===s.imageColor.length?s.imageColor=!1:1===s.imageColor.length?s.imageColor={relleno:s.imageColor[0]}:s.imageColor={relleno:s.imageColor[0],trazo:s.imageColor[1]}:s.imageColor&&(s.imageColor={relleno:s.imageColor});var o=v(t,s.imageOrder,s.imageAutoResize,s.imageResizeFactor,s.imageAnimation);" < svg"===s.image.slice(0,4).toLowerCase()&&"</svg > "===s.image.slice(-6).toLowerCase()?(o.append(s.image),o.children().css(c.element_svg),!s.imageClass&&s.imageColor&&o.find(" * ").css(s.imageColor)):".svg"===s.image.slice(-4).toLowerCase()||"data: image / svg"===s.image.slice(0,14).t oLowerCase()?g.ajax({url:s.image,type:"GET",dataType:"html",global:!1}).done(function(e){o.html(e),o.children().css(c.element_svg),!s.imageClass&&s.imageColor&&o.find(" * ").css(s.imageColor)}):o.css({"background - image": "url("+s.image+"), "background-position": "centro", "background-repeat": "sin repetición", "background-size": "portada"}), s.imageClass && o.addClass(s.imageClass) } if (s.fontawesome) { o = v(t, s.fontawesomeOrder, s.fontawesomeAutoResize, s.fontawesomeResizeFactor, s.fontawesomeAnimation).addClass("loadingoverlay_fa"); g("<div>", { clase: s.fontawesome }).appendTo(o), s.fontawesomeColor && o.css("color", s.fontawesomeColor) } if (s.custom) o = v(t, s.customOrder, s.customAutoResize, s.customResizeFactor, s.customAnimation).appe nd(s.personalizado); si(s.texto && (a.texto = v(t, s.orden_texto, s.redimensionamiento_automático_texto, s.factor_redimensionamiento_texto, s.animación_texto).addClass("cargando_superposición_texto").text(s.texto), s.clase_texto ? a.texto.addClass(s.clase_texto) : s.color_texto && a.texto.css("color", s.color_texto)), s.progreso){ o = v(t, s.orden_progreso, s.redimensionamiento_automático_progreso, s.factor_redimensionamiento_progreso, !1).addClass("cargando_superposición_texto"); var r = g("<div>").css(c.progress_wrapper).appendTo(o); a.progress = { bar: g("<div>").css(c.progress_bar).appendTo(r), fijo: !1, margen: 0, mín: parseFloat(s.progressMin), máx: parseFloat(s.progressMax), velocidad: parseInt(s.progressSpeed, 10) }; var i = (s.progressFixedPosition + "").replace(/\s\s+/g, " ").toLowerCase().split(" "); 2 === i.length && y(i[0]) ? (a.progress.fixed = i[0], a.progress.margin = w(i[1])) : 2 === i.length && y(i[1]) ? (a.progress.fixed = i[1], a.progress.margin = w(i[0])) : 1 === i.length && y(i[0]) && (a.progress.fixed = i[0], a.progress.margin = 0), "arriba" === a.progress.fixed ? o.css(c.progress_fixed).css("arriba", a.progress.margin ? a.progress.margi n.valor + (a.progress.margin.fixed ? a.progress.margin.units : "%"): 0) : "inferior" === a.progress.fixed && o.css(c.progress_fixed).css("superior", "automático"), s.progressClass ? a.progress.bar.addClass(s.progressClass) : s.progressColor && a.progress.bar.css("fondo", s.progressColor) } s.desvanecimiento ? !0 === s.desvanecimiento ? s.desvanecimiento = d.desvanecimiento : "cadena" == tipo de s.desvanecimiento || "número" == tipo de s.fade ? s.fade = [s.fade, s.fade] : g.isArray(s.fade) && s.fade.length < 2 && (s.fade = [s.fade[0], s.fade[0]]): s.fade = [0, 0], s.fade = [parseInt(s.fade[0], 10), parseInt(s.fade[1], 10)], a.settings = s, t.data("cargandooverlay_dat a", a), e.data("cargandosuperposición", t), t.fadeTo(0, .01).appendTo("cuerpo"), f(e, !0), 0 < s.resizeInterval && (a.resizeIntervalId = setInterval(función(){ f(e,!1) }, s.resizeInterval)), t.fadeTo(s.fade[0], 1)}a.count++}función r(e, s){ var t = p(e = g(e)), a = u(e); !1 !== a && (a.count--, (s || a.count <= 0) && t.animate({ opacidad: 0 }, a.settings.fade[1], función(){ a.resizeIntervalId && clearInterval(a.resizeIntervalId), g(this).remove(), e.removeData("loadingoverlay") })) }función i(e){ f(g(e), !0) }función l(e, s){ var t = u(e = g(e)); !1 !== t && t.texto && (!1 === s ? t.texto.hide() : t.texto.show().text(s)) }función m(e, s){ var t = u(e = g(e)); si(!1 !== t && t.progress) si(!1 === s)t.progress.bar.hide(); de lo contrario { var a = 100 * ((parseFloat(s) || 0) - t.progress.min) / (t.progress.max - t.progress.min); a < 0 && (a = 0), 100 < a && (a = 100), t.progress.bar.show().animate({ width: a + "%" }, t.progress.speed) } }función f(e, t) { var s = p(e), a = u(e); si(!1 !== a) { si(!a.wholePage) { var o = "fijo" === e.css("posición"), r = o ? e[0].getBoundingClientRect() : e.offset(); s.css({ posición: o ? "fijo" : "absoluto", arriba: r.top + parseInt(e.css("ancho-superior-del-borde"), 10), izquierda: r.izquierda + parseInt(e.css("ancho-izquierdo-del-borde"), 10), ancho: e.innerWidth(), alto: e.innerHeight() }) } if (a.settings.size) { var i = a.wholePage ? g(ventana) : e, n = a.configuraciones.tamaño.valor; a.configuraciones.tamaño.fijo || (n = Math.min(i.anchointerior(), i.alturainterior()) * n / 100, a.configuraciones.tamañomáximo && n > a.configuraciones.tamañomáximo && (n = a.configuraciones.tamañomáximo), a.configuraciones.tamañomín && n < a.configuraciones.tamañomín && (n = a.configuraciones.tamañomín)), s.children(".loadingoverlay_element").each(function () { var e = g(this); if (t || e.data("loadingoverlay_autoresize")) { var s = e.data("loadingoverlay_resizefactor"); e.hasClass("loadingoverlay_fa") || e.hasClass("loadingoverlay_text") ? e.css("tamaño-fuente", n * s + a.configuraciones.tamaño.unidades) : e.hasClass("loadingoverlay_progress") ? (a.progress.bar.css("altura", n * s + a.configuraciones.tamaño.unidades), a.progress.fixed ? "bottom" === a.progress.fixed && e.css("bottom", a.progress.margin ? a.progress.margin.value + (a.progress.margin.fixed ? a.progress.margin.units : "%") : 0).css("inferior",+="+n*s+a.settings.size.units):a.progress.bar.css("superior",e.position().superior).css("superior",-=" + n * s * .5 + a.settings.size.units)) : e.css({ ancho: n * s + a.settings.size.units, alto: n * s + a.settings.size.units }) } }) } } }función p(e){devuelve e.data("loadingoverlay") }función u(e){ var s = p(e), t = void 0 === s ? a : s.data("loadingoverlay_data");devuelve void 0 === t ? (g(".loadingoverlay").each(función(){ var e = g(this), s=e.data("loadingoverlay_data"); documento.cuerpo.contiene(s.container[0]) || (s.resizeIntervalId && clearInterval(s.resizeIntervalId), e.remove()) }), !1) : (s.toggle(e.is(":visible")), t) }función v(e, s, t, a, o){ var r = g("<div>", { clase: "loadingoverlay_element", css: { order: s } }).css(c.element).data({ loadingoverlay_autoresize: t, loadingoverlay_resizefactor: a }).appendTo(e); if (!0 === o && (o = d.animations.time + " " + d.animations.name), "string" == typeof o) { var i, n, l = o.replace(/\s\s+/g, " ").toLowerCase().split(" "); 2 === l.length && x(l[0]) && h(l[1]) ? (i = l[1], n = l[0]) : 2 === l.length && x(l[1]) && h(l[0]) ? (i = l[0], n = l[1]) : 1 === l.length && x(l[0]) ? (i = d.animations.name, n = l[0]) : 1 === l.length && h(l[0]) && (i = l[0], n = d.animations.time), r.css({ "animation-name": "loadingoverlay_animation__" + i, "animation-duration": n, "animation-timing-function": "lineal", "animation-iteration-count": "infinite" }) }devolver r }función x(e){ return !isNaN(parseFloat(e)) && ("s" === e.slice(-1) || "ms" === e.slice(-2)) }función h(e){ return -1 < s.animations.indexOf(e) }función y(e){ return -1 < s.progressPosition.indexOf(e) }función w(e){ return !(!e || e < 0) && ("string" == typeof e && -1 < ["vmin", "vmax"].indexOf(e.slice(-4)) ? { fixed: !0, units: e.slice(-4), value: e.slice(0, -4) } : "string" == typeof e && -1 < ["rem"].indexOf(e.slice(-3)) ? { fijo: !0, unidades: e.slice(-3), valor: e.slice(0, -3) } : "string" == typeof e && -1 < ["px", "em", "cm", "mm", "in", "pt", "pc", "vh", "vw"].indexOf(e.slice(-2)) ? { fijo: !0, unidades: e.slice(-2), valor: e.slice(0, -2) } : { fijo: !1, unidades: "px", valor: parseFloat(e) }) } g.LoadingOverlaySetup = función(e){ g.extend(!0, t, e) }, g.LoadingOverlay = función(e, s){ switch (e.toLowerCase()) { case "show": o("cuerpo", g.extend(!0, {}, t, s)); break; case "hide": r("cuerpo", s); break; case "resize": i("cuerpo"); break; case "text": l("cuerpo", s); break; case "progress": m("cuerpo", s) } }, g.fn.LoadingOverlay = function (e, s) { switch (e.toLowerCase()) { case "show": return this.each(función() { o(this, g.extend(!0, {}, t, s)) }); case "hide": return this.each(función() { r(this, s) }); case "resize": return this.each(función() { i(this) }); case "text": return this.each(función() { l(this, s) }); case "progress": return este.each(función(){ m(este, s) }) }}, g(función(){ g("cabeza").append(["<estilo>", "@-webkit-keyframes loadingoverlay_animation__rotate_right {", a { ",-webkit-transform : rotate(360deg);", transform: rotate(360deg); ",}", }",@keyframes loadingoverlay_animation__rotate_right {", a { ",-webkit-transform : rotate(360deg);", transform: rotate(360deg); ",}", }",@-webkit-keyframes loadingoverlay_animation__rotate_left {", a { ",-webkit-transform : rotate(-360deg);", transform: rotate(-360deg); ",}", }",@keyframes loadingoverlay_animation__rotate_left {", a { ",-webkit-transform : rotate(-360deg);", "transform : rotate(-360deg);", "}", "}", "@-webkit-keyframes loadingoverlay_animation__fadein {", "0% {", "opacidad : 0;", "-webkit-transform : escala(0.1, 0.1);", "transform : escala(0.1, 0.1);", "}", "50% {", "opacidad : 1;", "}", "100% {", "opacidad : 0;", "-webkit-transform : escala(1, 1);", "transform : escala(1, 1);", "}", "}", "@keyframes loadingoverlay_animation__fadein {", "0% {", "opacidad : 0;", "-webkit-transform : escala(0.1, 0.1);", "transform : escala(0.1, 0.1);", "}", "50% {", "opacidad : 1;", "}", "100% {", "opacidad: 0;", "-webkit-transform: escala(1, 1);", "transformar: escala(1, 1);", "}", "}", "@-webkit-keyframes loadingoverlay_animation__pulse {", "0% {", "-webkit-transform: escala(0, 0);", "transformar: escala(0, 0);", "}", "50% {", "-webkit-transform: escala(1, 1);", "transformar: escala(1, 1);", "}", "100% {", "-webkit-transform: escala(0, 0);", "transformar: escala(0, 0);", "}", "}", "@keyframes loadingoverlay_animation__pulse {", "0% {", "-webkit-transform: escala(0, 0);", "transformar: escala(0, 0);", "}", "50% {", "-webkit-transform: escala(1, 1);", transformar: escala(1, 1); ","}","100 % { ","-webkit - transform : escala(0, 0); ","transform : escala(0, 0);","}","}","</style > "].join(" "))})});